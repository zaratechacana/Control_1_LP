# Generated from Pointer.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,122,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,
        1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,11,1,11,1,12,1,12,1,13,1,13,5,13,96,8,13,10,13,12,13,99,9,13,
        1,14,3,14,102,8,14,1,14,4,14,105,8,14,11,14,12,14,106,1,14,4,14,
        110,8,14,11,14,12,14,111,3,14,114,8,14,1,15,4,15,117,8,15,11,15,
        12,15,118,1,15,1,15,0,0,16,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,1,0,4,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,
        32,127,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,1,33,1,0,0,0,3,40,1,0,0,0,5,47,1,0,0,0,7,49,1,0,0,
        0,9,56,1,0,0,0,11,65,1,0,0,0,13,70,1,0,0,0,15,72,1,0,0,0,17,74,1,
        0,0,0,19,80,1,0,0,0,21,82,1,0,0,0,23,89,1,0,0,0,25,91,1,0,0,0,27,
        93,1,0,0,0,29,113,1,0,0,0,31,116,1,0,0,0,33,34,5,115,0,0,34,35,5,
        101,0,0,35,36,5,108,0,0,36,37,5,101,0,0,37,38,5,99,0,0,38,39,5,116,
        0,0,39,2,1,0,0,0,40,41,5,97,0,0,41,42,5,118,0,0,42,43,5,97,0,0,43,
        44,5,110,0,0,44,45,5,122,0,0,45,46,5,97,0,0,46,4,1,0,0,0,47,48,5,
        44,0,0,48,6,1,0,0,0,49,50,5,100,0,0,50,51,5,105,0,0,51,52,5,98,0,
        0,52,53,5,117,0,0,53,54,5,106,0,0,54,55,5,97,0,0,55,8,1,0,0,0,56,
        57,5,100,0,0,57,58,5,101,0,0,58,59,5,115,0,0,59,60,5,112,0,0,60,
        61,5,108,0,0,61,62,5,97,0,0,62,63,5,122,0,0,63,64,5,97,0,0,64,10,
        1,0,0,0,65,66,5,114,0,0,66,67,5,111,0,0,67,68,5,116,0,0,68,69,5,
        97,0,0,69,12,1,0,0,0,70,71,5,40,0,0,71,14,1,0,0,0,72,73,5,41,0,0,
        73,16,1,0,0,0,74,75,5,109,0,0,75,76,5,105,0,0,76,77,5,114,0,0,77,
        78,5,97,0,0,78,79,5,114,0,0,79,18,1,0,0,0,80,81,5,97,0,0,81,20,1,
        0,0,0,82,83,5,114,0,0,83,84,5,101,0,0,84,85,5,112,0,0,85,86,5,105,
        0,0,86,87,5,116,0,0,87,88,5,101,0,0,88,22,1,0,0,0,89,90,5,58,0,0,
        90,24,1,0,0,0,91,92,5,45,0,0,92,26,1,0,0,0,93,97,7,0,0,0,94,96,7,
        1,0,0,95,94,1,0,0,0,96,99,1,0,0,0,97,95,1,0,0,0,97,98,1,0,0,0,98,
        28,1,0,0,0,99,97,1,0,0,0,100,102,5,45,0,0,101,100,1,0,0,0,101,102,
        1,0,0,0,102,104,1,0,0,0,103,105,7,2,0,0,104,103,1,0,0,0,105,106,
        1,0,0,0,106,104,1,0,0,0,106,107,1,0,0,0,107,114,1,0,0,0,108,110,
        7,2,0,0,109,108,1,0,0,0,110,111,1,0,0,0,111,109,1,0,0,0,111,112,
        1,0,0,0,112,114,1,0,0,0,113,101,1,0,0,0,113,109,1,0,0,0,114,30,1,
        0,0,0,115,117,7,3,0,0,116,115,1,0,0,0,117,118,1,0,0,0,118,116,1,
        0,0,0,118,119,1,0,0,0,119,120,1,0,0,0,120,121,6,15,0,0,121,32,1,
        0,0,0,7,0,97,101,106,111,113,118,1,6,0,0
    ]

class PointerLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    ID = 14
    INT = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'select'", "'avanza'", "','", "'dibuja'", "'desplaza'", "'rota'", 
            "'('", "')'", "'mirar'", "'a'", "'repite'", "':'", "'-'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "ID", 
                  "INT", "WS" ]

    grammarFileName = "Pointer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


